@model IEnumerable<MeetingVL.Models.Session_Semester>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_MeetingVL.cshtml";
    int project_id = int.Parse(TempData["project_id"].ToString());
    int semester_id = int.Parse(TempData["semester_id"].ToString());
    string semester_name = TempData["semester_name"].ToString();
    string Role = TempData["roles_Project"].ToString();
    var List_Group_Semester = Model.FirstOrDefault().Semester.Project.ProjectParticipants
        .Where(p =>p.Group_ID != null && p.Group.State != "Deleted").GroupBy(g => g.Group_ID).OrderBy(p => p.Key)
        .Select(s => new {
            group_id = s.Key,
            group_name = Model.FirstOrDefault().Semester.Project.ProjectParticipants.Where(g => g.Group_ID == s.Key).FirstOrDefault().Group.Name
        });
    int no = 0;
}

<section id="basic-tabs-components">
    <div class="col-sm-12">
        <ul class="header-controls-list">
            <li class="header-controls-item text-bold-400"><a href="@Url.Action("Index", "Categories")">Category</a></li>
            <ion-icon name="chevron-forward-outline" class="header-direction"></ion-icon>
            <li class="header-controls-item text-bold-400"><a href="@Url.Action("Index", "Projects", new {category_id = @Model.FirstOrDefault().Semester.Project.Category.ID })">@Model.FirstOrDefault().Semester.Project.Category.Name</a></li>
            <ion-icon name="chevron-forward-outline" class="header-direction"></ion-icon>
            <li class="header-controls-item text-bold-400"><a href="@Url.Action("Index", "Session_Reports", new {project_id = @Model.FirstOrDefault().Semester.Project.ID, active = 4})">@Model.FirstOrDefault().Semester.Project.Name</a></li>
            <ion-icon name="chevron-forward-outline" class="header-direction"></ion-icon>
            <li class="header-controls-item text-bold-400">@Model.FirstOrDefault().Semester.Name</li>
        </ul>
        </div>
    <div class="row match-height">
        <div class="col-xl-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                        <div class="card-title-wrap bar-warning">
                            <h4 class="card-title">Semester - @Model.FirstOrDefault().Semester.Name</h4>

                        </div>
                    </div>
                <div class="card-body">
                    <div class="card-block">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" id="base-tabX1" data-toggle="tab" aria-controls="tab1" href="#tab1" aria-expanded="true">Statistical</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link " id="base-tabX2" data-toggle="tab" aria-controls="tab2" href="#tab2">Chart</a>
                            </li>

                        </ul>
                        <div class="tab-content px-1 pt-1">
                            <div class="tab-pane active" id="tab1" aria-expanded="true" aria-labelledby="base-tabX1">
                                <section id="horizontal">
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="card">
                                                <div class="card-body collapse show">
                                                    <div class="card-block card-dashboard">
                                                        <table class="table display nowrap table-striped table-bordered scroll-horizontal">
                                                            <thead>
                                                                <tr>
                                                                    <th>#</th>
                                                                    <th>Name Group</th>
                                                                    @foreach (var item in Model)
                                                                    {
                                                                        <th>@item.SessionReport.Name</th>
                                                                    }
                                                                    <th>Review</th>

                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var item in List_Group_Semester)
                                                                {
                                                                   
                                                                    string CreateEvalue = "CreateEvalue" + item.group_id;
                                                                    no++;
                                                                    <tr>
                                                                        <td>@no</td>
                                                                        <td>@item.group_name</td>
                                                                        @Html.Action("List_Submit_Semester", "Session_Reports", new { semester_id = semester_id, group_id = item.group_id })
                                                                        <td>
                                                                            @if (Role == "Manager")
                                                                            {
                                                                                <a class="success p-0" data-toggle="modal" data-target="#@CreateEvalue">
                                                                                    <i class="fa fa-pencil font-medium-3 mr-2"></i>
                                                                                </a>
                                                                            }


                                                                            <div class="modal fade text-left" id="@CreateEvalue" tabindex="-1" role="dialog" aria-labelledby="myModalLabel34" aria-hidden="true">
                                                                                <div class="modal-dialog" role="document">
                                                                                    <div class="modal-content">
                                                                                        <div class="modal-header">
                                                                                            <h3 class="modal-title" id="myModalLabel34">Create Evalue</h3>
                                                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                                <span aria-hidden="true">&times;</span>
                                                                                            </button>
                                                                                        </div>
                                                                                        @using (Html.BeginForm("Create", "Evaluates", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                                                                        {

                                                                                            @Html.Hidden("project_id", project_id)
                                                                                            @Html.Hidden("group_id", item.group_id)
                                                                                            @Html.Hidden("semester_id", semester_id)
                                                                                            <div class="modal-body">
                                                                                                <div class="col-md-12">
                                                                                                    <div class="form-group">
                                                                                                        <label for="projectinput1">Point: </label>
                                                                                                        <input class="form-control border-primary" type="number" id="Deadline" name="point" max="10" min="0">
                                                                                                    </div>
                                                                                                    <div class="form-group">
                                                                                                        <label for="projectinput1">Review: </label>
                                                                                                        <textarea class="form-control border-primary" id="Descriptions" name="review"
                                                                                                                  required="required" oninvalid="this.setCustomValidity('Please enter Review')" oninput="setCustomValidity('')"></textarea>
                                                                                                    </div>

                                                                                                </div>
                                                                                            </div>
                                                                                            <div class="modal-footer">
                                                                                                <input type="reset" class="btn btn-outline-secondary btn-lg" data-dismiss="modal" value="Cancel">
                                                                                                <input type="submit" class="btn btn-outline-primary btn-lg" value="Save">
                                                                                            </div>
                                                                                        }
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            @Html.Action("Index", "Evaluates", new { semester_id = semester_id, group_id = item.group_id })
                                                                        </td>
                                                                    </tr>

                                                                }

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </section>
                            </div>

                            <div class="tab-pane" id="tab2" aria-labelledby="base-tabX3">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="card">
                                            <div class="card-header">
                                                <div class="card-title-wrap bar-warning">
                                                    <a class="btn btn-social btn-round btn-min-width mr-2 mb-2 btn-Download" data-toggle="modal" data-target="#ExportExcel">
                                                        <span class="ft ft-download"></span> Export Excel

                                                    </a>
                                                    <h4 class="card-title">Number of meeting minutes submitted by group</h4>
                                                </div>
                                            </div>

                                            <div class="card-body">
                                                <div class="card-block chartjs">
                                                    <canvas id="column-chart" height="400"></canvas>
                                                </div>
                                            </div>

                                            <div class="card-header">
                                                <div class="card-title-wrap bar-primary">
                                                   
                                                    <h4 class="card-title">Point of the semester</h4>
                                                </div>
                                            </div>

                                            <div class="card-body">
                                                <div class="card-block chartjs">
                                                    <canvas id="column-chart2" height="400"></canvas>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>
<div class="modal fade text-left" id="ExportExcel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel1"><b>Notification</b></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <p>Are you sure you want to export to an excel file the submission status and grades of the groups for this semester? </p>
            </div>
            <div class="modal-footer">

                <button type="button" class="btn grey btn-outline-secondary" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-outline-primary" id="btnExport" data-dismiss="modal">Yes</button>

            </div>
        </div>
    </div>
</div>

<script src="~/Template/app-assets/vendors/js/core/jquery-3.3.1.min.js"></script>
<script src="~/Template/app-assets/vendors/js/chart.min.js"></script>

<script type="text/javascript">

    var project_id = @project_id;
    var semester_id = @semester_id;

    $.ajax({
        type: 'POST',
        url: '@Url.Action("List_Group_Statistics_Semester", "ProjectParticipants")',
        data: { 'project_id': project_id, 'semester_id': semester_id },
        success: function (response) {
            //Get the context of the Chart canvas element we want to select
            var ctx = $("#column-chart");

            // Chart Options
            var chartOptions = {
                // Elements options apply to all of the options unless overridden in a dataset
                // In this case, we are setting the border of each bar to be 2px wide and green
                elements: {
                    rectangle: {
                        borderWidth: 2,
                        borderColor: 'rgb(0, 255, 0)',
                        borderSkipped: 'bottom'
                    }
                },
                responsive: true,
                maintainAspectRatio: false,
                scaleShowVerticalLines: false,
                responsiveAnimationDuration: 500,
                legend: {
                    position: 'top',
                },
                scales: {
                    xAxes: [{
                        display: true,
                        gridLines: {
                            color: "#f3f3f3",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }],
                    yAxes: [{
                        display: true,
                        gridLines: {
                            color: "#f3f3f3",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }]
                }
            };

            // Get chart labels and data
            var labels = response.map(function (e) {
                return e.group;
            });
            var data = response.map(function (e) {
                return e.sum;
            });
            var point = response.map(function (e) {
                return e.point;
            });

            // Chart Data
            var chartData = {
                labels: labels,
                datasets: [{
                    label: "Meeting Minutes",
                    data: data,
                    backgroundColor: "rgba(255, 95, 32, 0.8)",
                    borderColor: "transparent",
                    pointBackgroundColor: 'rgba(148,159,177,1)',
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: 'rgba(148,159,177,0.8)'
                }]
            };

            var config = {
                type: 'bar',

                // Chart Options
                options: chartOptions,

                data: chartData
            };

            // Create the chart
            var lineChart = new Chart(ctx, config);
        }
    });
</script>
<script type="text/javascript">

    var project_id = @project_id;
    var semester_id = @semester_id;

    $.ajax({
        type: 'POST',
        url: '@Url.Action("List_Group_Statistics_Semester", "ProjectParticipants")',
        data: { 'project_id': project_id, 'semester_id': semester_id },
        success: function (response) {
            //Get the context of the Chart canvas element we want to select
            var ctx = $("#column-chart2");

            // Chart Options
            var chartOptions = {
                // Elements options apply to all of the options unless overridden in a dataset
                // In this case, we are setting the border of each bar to be 2px wide and green
                elements: {
                    rectangle: {
                        borderWidth: 2,
                        borderColor: 'rgb(0, 255, 0)',
                        borderSkipped: 'bottom'
                    }
                },
                responsive: true,
                maintainAspectRatio: false,
                scaleShowVerticalLines: false,
                responsiveAnimationDuration: 500,
                legend: {
                    position: 'top',
                },
                scales: {
                    xAxes: [{
                        display: true,
                        gridLines: {
                            color: "#f3f3f3",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }],
                    yAxes: [{
                        display: true,
                        gridLines: {
                            color: "#f3f3f3",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }]
                }
            };

            // Get chart labels and data
            var labels = response.map(function (e) {
                return e.group;
            });
            var data = response.map(function (e) {
                return e.sum;
            });
            var point = response.map(function (e) {
                return e.point;
            });

            // Chart Data
            var chartData = {
                labels: labels,
                datasets: [{
                        label: "Point",
                        data: point,
                        backgroundColor: "rgba(102, 110, 232, 0.8)",
                        borderColor: 'transparent',
                        pointBackgroundColor: 'rgba(148,159,177,1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(148,159,177,0.8)'
                    }]
            };

            var config = {
                type: 'bar',

                // Chart Options
                options: chartOptions,

                data: chartData
            };

            // Create the chart
            var lineChart = new Chart(ctx, config);
        }
    });
</script>

<table hidden id="tblCustomers" class="table" cellpadding="0" cellspacing="0">
    <tr>
        <th colspan="2">MEETING VL</th>
    </tr>
    <tr>
        <th colspan="3">@semester_name</th>

    </tr>
    <tr>
        <th>Group</th>
        <th>Number of meeting minutes</th>
        <th>Point</th>
    </tr>
    @foreach (var item in List_Group_Semester)
    {
        <tr>
            <td>@item.group_name</td>
            @Html.Action("List_Submit_Semester", "Session_Reports", new { semester_id = semester_id, group_id = item.group_id, action = 1 })
            @Html.Action("Index", "Evaluates", new { semester_id = semester_id, group_id = item.group_id, action = 1 })
        </tr>
    }
</table>
<br />


